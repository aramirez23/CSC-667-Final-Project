version: '3.7'
services:
  # Nginx Service
  nginx-proxy:
    image: pachecosf/nginx-proxy:latest
    restart: always
    ports:
      - 80:80
    networks:
      - webnet
  redis:
    image : redis:5.0.4
    ports:
      - "6379:6379"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  mongodb:
    image: mongo:4.4
    environment:
      - MONGO_INITDB_DATABASE=db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
      - ./mongo-volume:/data/db
    ports:
      - 27017:27017
    networks:
      - webnet
  shockwave:
    image : pachecosf/shockwave
    depends_on:
      - mongodb
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - webnet
    environment:
      - REDIS_HOST=redis
      - MONGO_HOST=mongodb://root:secret@mongodb:27017
  frontfunkyend:
    image : pachecosf/frontfunkyend
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - REACT_APP_ENV=prod
    networks:
      - webnet
  webrocket:
    image : pachecosf/webrocket
    depends_on:
      - redis
    ports:
      - "4004:4004"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - webnet
    environment:
      - REDIS_HOST=redis
networks:
  webnet:
